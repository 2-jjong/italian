plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.12'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ssafy.italian_brainrot'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot JPA: 데이터베이스 연동 및 ORM 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot Web: REST API 서버 구축을 위한 Spring MVC 기능
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // FCM (Firebase Cloud Messaging): 푸시 알림 전송을 위한 Firebase Admin SDK
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // Spring WebFlux: 외부 API 호출을 위한 비동기 HTTP 클라이언트 (WebClient)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Jackson JSON: API 응답 데이터의 JSON 직렬화/역직렬화 처리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // Swagger: API 문서 자동 생성 및 UI 제공
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Lombok: 어노테이션을 통한 보일러플레이트 코드 자동 생성 (@Getter, @Setter, @ToString 등)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 개발 도구: 코드 변경 시 자동 재시작, LiveReload 등 개발 편의 기능
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // MySQL 드라이버: MySQL 데이터베이스 연결을 위한 드라이버
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 테스트 프레임워크: 단위 테스트 및 통합 테스트를 위한 Spring Boot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 테스트에서도 Lombok 사용을 위한 설정
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // JUnit 플랫폼: 테스트 실행 엔진
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}